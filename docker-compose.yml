version: "3.9"

services:
  db:
    image: postgres:14.1
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}

  rabbitmq:
    image: "rabbitmq:alpine"

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  django:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=psql://postgres:postgres@db:5432/${DATABASE_NAME}
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A tasks worker -l info --without-gossip --without-mingle --without-heartbeat
    environment:
      - DATABASE_URL=psql://postgres:postgres@db:5432/${DATABASE_NAME}
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DATABASE_URL=psql://postgres:postgres@db:5432/${DATABASE_NAME}
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure